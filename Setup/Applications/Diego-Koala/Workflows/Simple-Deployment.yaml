harnessApiVersion: '1.0'
type: ROLLING
concurrencyStrategy: INFRA
envName: Dev
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupIds:
  - PFIVcv84TVW6OEpQEDvmGw
phases:
- type: KUBERNETES
  computeProviderName: Kubernetes Cluster Diego-GKE
  daemonSet: false
  infraDefinitionName: Diego-Koala-GKE
  name: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    steps:
    - type: K8S_DEPLOYMENT_ROLLING
      name: Rollout Deployment
      properties:
        stateTimeoutInMinutes: 10
        templateUuid: null
        templateVariables: null
        templateVersion: null
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Verify
    steps:
    - type: SHELL_SCRIPT
      name: Get LoadBalancer IP
      properties:
        commandPath: null
        connectionAttributes: null
        delegateSelectors:
        - diego-koala
        executeOnDelegate: true
        host: null
        outputVars: URL
        publishAsVar: true
        scriptString: |
          echo "Getting External LoadBalancer IP"

          export URL=$(kubectl get svc ${service.name} -n ${infra.kubernetes.namespace} --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}") # Get the load balancer from k8s service

          sleep 2

          echo "External LoadBalancer IP: $URL"
        scriptType: BASH
        secretOutputVars: ''
        sshKeyRef: null
        sweepingOutputName: api_service
        sweepingOutputScope: PIPELINE
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    - type: SHELL_SCRIPT
      name: Execute Selenium Test
      properties:
        commandPath: null
        connectionAttributes: null
        delegateSelectors:
        - diego-koala
        executeOnDelegate: true
        host: null
        outputVars: ''
        publishAsVar: false
        scriptString: |-
          export TESTURL=${workflow.variables.API_URL}
          rm -rf harness-selenium
          git clone https://github.com/diegopereiraeng/java-restful-web-services
          python java-restful-web-services/${workflow.variables.TEST_SCRIPT} $TESTURL
        scriptType: BASH
        sshKeyRef: null
        sweepingOutputName: null
        sweepingOutputScope: null
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: diego-java-springboot-service
  statefulSet: false
rollbackPhases:
- type: KUBERNETES
  computeProviderName: Kubernetes Cluster Diego-GKE
  daemonSet: false
  infraDefinitionName: Diego-Koala-GKE
  name: Rollback Rolling
  phaseNameForRollback: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    phaseStepNameForRollback: Deploy
    statusForRollback: SUCCESS
    steps:
    - type: K8S_DEPLOYMENT_ROLLING_ROLLBACK
      name: Rollback Deployment
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    phaseStepNameForRollback: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: diego-java-springboot-service
  statefulSet: false
templatized: true
userVariables:
- type: TEXT
  fixed: false
  mandatory: true
  name: API_URL
  value: http://${context.api_service.URL}:8080
- type: TEXT
  fixed: false
  mandatory: false
  name: TEST_SCRIPT
  value: selenium-checker.py
